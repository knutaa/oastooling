openapi: 3.0.1
info:
  title: Trouble Ticket
  description: "**TMF API Reference : TMF - 621 Trouble Ticket**\nThe xx Trouble Ticket API provides a standardized client interface to Trouble Ticket Management Systems for creating, tracking and managing trouble tickets as a result of an issue or problem identified by a customer or another system. \nExamples of Trouble Ticket API originators (clients) include CRM applications, network management or fault management systems, or other Trouble Ticket management systems (e.g. B2B).\nThe API supports the ability to send requests to create a new trouble ticket specifying the nature and severity of the trouble or issue as well as all necessary related information. The API also includes mechanisms to search for and update existing trouble tickets. Notifications are defined to provide information when a trouble ticket has been updated, including status changes. A basic set of states of a trouble ticket has been specified (as an example) to handle trouble ticket lifecycle management.\nTrouble Ticketing API manages trouble ticket resource:\n  -\tA trouble ticket represents a record, or an issue raised by requestor that need to be solved, used for reporting and managing the resolution of problems, incidents or request  -\tMain trouble ticket attributes are its description, severity, type, related dates (creation, expected resolution, resolution), state and related information (change reason and change date), related parties (originator, owner, reviser, etc.), related entities (product, product order, customer bill) and notes Trouble Ticket API performs the following operations on trouble ticket -\tRetrieval of a trouble ticket or a collection of trouble ticket depending on filter criteria -\tPartial update of a trouble ticket -\tCreation of a trouble ticket  -\tNotification of events on trouble ticket: o\tTrouble ticket state change o\tTrouble ticket change o\tTrouble ticket resoled o\tTrouble ticket created o\tTrouble ticket Information required "
  version: 5.0.0
servers:
  - url: 'https://serverRoot'
tags:
  - name: troubleTicket
    description: Operations for TroubleTicket Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /troubleTicket:
    get:
      tags:
        - troubleTicket
      summary: List or find TroubleTicket objects
      description: >-
        This operation retrieves a TroubleTicket entity. Attribute selection enabled for all first
        level attributes.
      operationId: listTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200TroubleTicketArray'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - troubleTicket
      summary: Creates a TroubleTicket
      description: This operation creates a TroubleTicket entity.
      operationId: createTroubleTicket
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicket_Create'
      responses:
        '201':
          $ref: '#/components/responses/201TroubleTicket'
        default:
          $ref: '#/components/responses/Error'
  '/troubleTicket/{id}':
    get:
      tags:
        - troubleTicket
      summary: Retrieves a TroubleTicket by ID
      description: List or find TroubleTicket objects
      operationId: retrieveTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/200TroubleTicket'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - troubleTicket
      summary: Deletes a TroubleTicket
      description: This operation deletes a TroubleTicket entity.
      operationId: deleteTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          $ref: '#/components/responses/204'
        default:
          $ref: '#/components/responses/Error'
    patch:
      tags:
        - troubleTicket
      summary: Updates partially a TroubleTicket
      description: This operation updates partially a TroubleTicket entity.
      operationId: patchTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicket_Update'
      responses:
        '200':
          $ref: '#/components/responses/200TroubleTicket'
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
      operationId: troubleTicketCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
  /listener/troubleTicketAttributevaluechangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        TroubleTicketAttributevaluechangeEvent
      operationId: troubleTicketAttributevaluechangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketAttributevaluechangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
  /listener/troubleTicketStatuschangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketStatuschangeEvent
      operationId: troubleTicketStatuschangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketStatuschangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
  /listener/troubleTicketDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketDeleteEvent
      operationId: troubleTicketDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
  /listener/troubleTicketResolvedEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketResolvedEvent
      operationId: troubleTicketResolvedEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketResolvedEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
  /listener/troubleTicketInformationrequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        TroubleTicketInformationrequiredEvent
      operationId: troubleTicketInformationrequiredEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TroubleTicketInformationrequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
  /hub:
    post:
      operationId: registerListener
      summary: Register a listener
      description: >-
        Sets the communication endpoint address the service instance must use to deliver information
        about its health state, execution state, failures and metrics.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/EventSubscriptionInput'
      responses:
        '201':
          $ref: '#/components/responses/EventSubscription'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: unregisterListener
      summary: Unregister a listener
      description: >-
        Resets the communication endpoint address the service instance must use to deliver
        information about its health state, execution state, failures and metrics.
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - description: Base event with common attributes.
          type: object
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
          TroubleTicketInformationrequiredEvent: '#/components/schemas/TroubleTicketInformationrequiredEvent'
          TroubleTicketResolvedEvent: '#/components/schemas/TroubleTicketResolvedEvent'
          TroubleTicketDeleteEvent: '#/components/schemas/TroubleTicketDeleteEvent'
          TroubleTicketStatuschangeEvent: '#/components/schemas/TroubleTicketStatuschangeEvent'
          TroubleTicketAttributevaluechangeEvent: '#/components/schemas/TroubleTicketAttributevaluechangeEvent'
          TroubleTicketCreateEvent: '#/components/schemas/TroubleTicketCreateEvent'
    Entity:
      allOf:
        - $ref: '#/components/schemas/Addressable'
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
    Addressable:
      type: object
      required:
        - id
        - href
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      required:
        - '@type'
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
    TroubleTicket:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A trouble ticket is a record of an issue that is created, tracked, and managed by a
            trouble ticket management system
          properties:
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a
                bill or charge
            channel:
              $ref: '#/components/schemas/ChannelRef'
            creationDate:
              type: string
              format: date-time
              description: The date on which the trouble ticket was created
            expectedResolutionDate:
              type: string
              format: date-time
              description: The expected resolution date determined by the trouble ticket system
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: List of additional identifiers coming from an external system
            lastUpdateDate:
              type: string
              format: date-time
              description: The date and time that the trouble ticked was last updated
            name:
              type: string
              description: >-
                Name of the trouble ticket, typically a short description provided by the user that
                create the ticket
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
              description: The note(s) that are associated to the ticket.
            priority:
              type: string
              description: >-
                The priority of the trouble ticket and how quickly the issue should be resolved.
                Example: Critical, High, Medium, Low. The value is set by the ticket management
                system considering the severity, ticket type etc...
            relatedEntity:
              type: array
              items:
                $ref: '#/components/schemas/RelatedEntity'
              description: >-
                An entity that is related to the ticket such as a bill, a product, etc. The entity
                against which the ticket is associated.
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
              description: The related party(ies) that are associated to the ticket.
            requestedResolutionDate:
              type: string
              format: date-time
              description: The resolution date requested by the user
            resolutionDate:
              type: string
              format: date-time
              description: The date and time the trouble ticket was resolved
            status:
              $ref: '#/components/schemas/TroubleTicketStatusType'
            statusChange:
              type: array
              items:
                $ref: '#/components/schemas/StatusChange'
              description: The status change history that are associated to the ticket.Populated by the server
            statusChangeDate:
              type: string
              format: date-time
              description: The date and time the status changed.
            statusChangeReason:
              type: string
              description: The reason for changing the status
            troubleTicketRelationship:
              type: array
              items:
                $ref: '#/components/schemas/TroubleTicketRelationship'
              description: >-
                A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a
                relationship between trouble tickets
            description:
              type: string
              description: Description of the trouble or issue
            severity:
              type: string
              description: >-
                The severity of the issue. Indicate the implication of the issue on the expected
                functionality e.g. of a system, application, service etc.. 

                Severity values can be for example : Critical, Major, Minor
            ticketType:
              type: string
              description: 'represent a business type of the trouble ticket e.g. incident, complain, request'
          required:
            - description
            - status
            - severity
            - ticketType
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicket: '#/components/schemas/TroubleTicket'
    AttachmentRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRefOrValue: '#/components/schemas/AttachmentRefOrValue'
          AttachmentRef: '#/components/schemas/AttachmentRef'
          Attachment: '#/components/schemas/Attachment'
    ChannelRef:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/SchemaContext'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          type: object
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
    Note:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - description: Extra information about a given entity
          type: object
          properties:
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            id:
              type: string
              description: Identifier of the note within its containing entity
            text:
              type: string
              description: Text of the note
          required:
            - id
            - text
    RelatedEntity:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/EntityRef'
        - description: 'A reference to an entity, where the type of the entity is not known in advance.'
          type: object
          properties:
            role:
              type: string
              description: The role of an entity.
          required:
            - role
            - '@referredType'
    RelatedParty:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            Related Entity reference. A related party defines party or party role linked to a
            specific entity.
          type: object
          properties:
            role:
              type: string
              description: Role played by the related party
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - '@referredType'
    TroubleTicketStatusType:
      type: string
      description: Possible values for the status of the trouble ticket
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - closed
        - resolved
    StatusChange:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - type: object
          description: >-
            Holds the status, reasons and associated date the status changed, populated by the
            server
          properties:
            changeReason:
              type: string
              description: The reason why the status changed.
            status:
              type: string
              description: The status of the entity
            changeDate:
              type: string
              format: date-time
              description: The date and time the status changed.
          required:
            - status
            - changeDate
    TroubleTicketRelationship:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - type: object
          description: Represents a relationship between trouble Trouble Tickets
          properties:
            name:
              type: string
              description: Name of the Trouble Ticket
            href:
              type: string
              format: uri
              description: Hyperlink reference
            id:
              type: string
              description: ID of the related trouble ticket
            relationshipType:
              type: string
              description: 'Relationship type as dependent, isChild, etc...'
          required:
            - id
            - relationshipType
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/AttachmentRefOrValue'
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          type: object
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
    Attachment:
      allOf:
        - $ref: '#/components/schemas/AttachmentRefOrValue'
        - $ref: '#/components/schemas/Entity'
        - description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          type: object
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: 'Attachment type such as video, picture'
            mimeType:
              type: string
              description: 'Attachment mime type such as extension file for video, picture and document'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    SchemaContext:
      type: object
      description: SchemaContext schema for use in TMForum Open-APIs
      properties:
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    EntityRef:
      description: Entity reference schema to be use for all entityRef class.
      type: object
      properties:
        href:
          type: string
          description: Hyperlink reference
    GcTroubleTicketStatusType:
      type: string
      description: Possible values for the status of the trouble ticket
      enum:
        - acknowledged
        - rejected
        - inProgress
        - cancelled
        - closed
        - resolved
      properties: {}
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    TimePeriod:
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      type: object
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Reference:
      description: Reference schema .
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Identifier of the referred entity.
        name:
          type: string
          description: Name of the referred entity.
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    TroubleTicket_Create:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A trouble ticket is a record of an issue that is created, tracked, and managed by a
            trouble ticket management system
          properties:
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a
                bill or charge
            channel:
              $ref: '#/components/schemas/ChannelRef'
            expectedResolutionDate:
              type: string
              format: date-time
              description: The expected resolution date determined by the trouble ticket system
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: List of additional identifiers coming from an external system
            name:
              type: string
              description: >-
                Name of the trouble ticket, typically a short description provided by the user that
                create the ticket
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
              description: The note(s) that are associated to the ticket.
            priority:
              type: string
              description: >-
                The priority of the trouble ticket and how quickly the issue should be resolved.
                Example: Critical, High, Medium, Low. The value is set by the ticket management
                system considering the severity, ticket type etc...
            relatedEntity:
              type: array
              items:
                $ref: '#/components/schemas/RelatedEntity'
              description: >-
                An entity that is related to the ticket such as a bill, a product, etc. The entity
                against which the ticket is associated.
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
              description: The related party(ies) that are associated to the ticket.
            requestedResolutionDate:
              type: string
              format: date-time
              description: The resolution date requested by the user
            resolutionDate:
              type: string
              format: date-time
              description: The date and time the trouble ticket was resolved
            status:
              $ref: '#/components/schemas/TroubleTicketStatusType'
            troubleTicketRelationship:
              type: array
              items:
                $ref: '#/components/schemas/TroubleTicketRelationship'
              description: >-
                A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a
                relationship between trouble tickets
            description:
              type: string
              description: Description of the trouble or issue
            severity:
              type: string
              description: >-
                The severity of the issue. Indicate the implication of the issue on the expected
                functionality e.g. of a system, application, service etc.. 

                Severity values can be for example : Critical, Major, Minor
            ticketType:
              type: string
              description: 'represent a business type of the trouble ticket e.g. incident, complain, request'
          required:
            - description
            - status
            - severity
            - ticketType
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicket: '#/components/schemas/TroubleTicket_Create'
    TroubleTicket_Update:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A trouble ticket is a record of an issue that is created, tracked, and managed by a
            trouble ticket management system
          properties:
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a
                bill or charge
            channel:
              $ref: '#/components/schemas/ChannelRef'
            expectedResolutionDate:
              type: string
              format: date-time
              description: The expected resolution date determined by the trouble ticket system
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: List of additional identifiers coming from an external system
            name:
              type: string
              description: >-
                Name of the trouble ticket, typically a short description provided by the user that
                create the ticket
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
              description: The note(s) that are associated to the ticket.
            priority:
              type: string
              description: >-
                The priority of the trouble ticket and how quickly the issue should be resolved.
                Example: Critical, High, Medium, Low. The value is set by the ticket management
                system considering the severity, ticket type etc...
            relatedEntity:
              type: array
              items:
                $ref: '#/components/schemas/RelatedEntity'
              description: >-
                An entity that is related to the ticket such as a bill, a product, etc. The entity
                against which the ticket is associated.
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
              description: The related party(ies) that are associated to the ticket.
            requestedResolutionDate:
              type: string
              format: date-time
              description: The resolution date requested by the user
            resolutionDate:
              type: string
              format: date-time
              description: The date and time the trouble ticket was resolved
            status:
              $ref: '#/components/schemas/TroubleTicketStatusType'
            statusChangeReason:
              type: string
              description: The reason for changing the status
            troubleTicketRelationship:
              type: array
              items:
                $ref: '#/components/schemas/TroubleTicketRelationship'
              description: >-
                A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a
                relationship between trouble tickets
            description:
              type: string
              description: Description of the trouble or issue
            severity:
              type: string
              description: >-
                The severity of the issue. Indicate the implication of the issue on the expected
                functionality e.g. of a system, application, service etc.. 

                Severity values can be for example : Critical, Major, Minor
            ticketType:
              type: string
              description: 'represent a business type of the trouble ticket e.g. incident, complain, request'
          required:
            - description
            - status
            - severity
            - ticketType
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicket: '#/components/schemas/TroubleTicket_Update'
    TroubleTicketCreateEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketAttributevaluechangeEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketStatuschangeEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketResolvedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketInformationrequiredEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketEventPayload:
      description: TBD
      type: object
      properties:
        troubleTicket:
          $ref: '#/components/schemas/TroubleTicket'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
              format: uri
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    EventSubscriptionInput:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
    EventSubscription:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - id
        - callback
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Service
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    TroubleTicket_Create:
      description: The TroubleTicket to be created
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/TroubleTicket_Create'
      required: true
    TroubleTicket_Update:
      description: The TroubleTicket to be updated
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/TroubleTicket_Update'
      required: true
    EventSubscriptionInput:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/EventSubscriptionInput'
      required: true
  responses:
    '204':
      description: Deleted
      content: {}
    200TroubleTicketArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json;charset=utf-8:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TroubleTicket'
    200TroubleTicket:
      description: Success
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
    201TroubleTicket:
      description: Created
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    EventSubscription:
      description: Notified
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/EventSubscription'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
