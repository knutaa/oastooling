openapi: 3.0.1
info:
  title: Trouble Ticket
  description: "**TMF API Reference : TMF - 621 Trouble Ticket**\nThe Trouble Ticket API provides a standardized client interface to Trouble Ticket Management Systems for creating, tracking and managing trouble tickets as a result of an issue or problem identified by a customer or another system. \nExamples of Trouble Ticket API originators (clients) include CRM applications, network management or fault management systems, or other Trouble Ticket management systems (e.g. B2B).\nThe API supports the ability to send requests to create a new trouble ticket specifying the nature and severity of the trouble or issue as well as all necessary related information. The API also includes mechanisms to search for and update existing trouble tickets. Notifications are defined to provide information when a trouble ticket has been updated, including status changes. A basic set of states of a trouble ticket has been specified (as an example) to handle trouble ticket lifecycle management.\nTrouble Ticketing API manages trouble ticket resource:\n  -\tA trouble ticket represents a record, or an issue raised by requestor that need to be solved, used for reporting and managing the resolution of problems, incidents or request  -\tMain trouble ticket attributes are its description, severity, type, related dates (creation, expected resolution, resolution), state and related information (change reason and change date), related parties (originator, owner, reviser, etc.), related entities (product, product order, customer bill) and notes Trouble Ticket API performs the following operations on trouble ticket -\tRetrieval of a trouble ticket or a collection of trouble ticket depending on filter criteria -\tPartial update of a trouble ticket -\tCreation of a trouble ticket  -\tNotification of events on trouble ticket: o\tTrouble ticket state change o\tTrouble ticket change o\tTrouble ticket resoled o\tTrouble ticket created o\tTrouble ticket Information required "
  version: 5.0.0
servers:
  - url: 'https://serverRoot'
tags:
  - name: troubleTicket
    description: Operations for TroubleTicket Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /troubleTicket:
    get:
      tags:
        - troubleTicket
      summary: List or find TroubleTicket objects
      description: >-
        This operation retrieves a TroubleTicket entity. Attribute selection enabled for all first
        level attributes.
      operationId: listTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200TroubleTicketArray'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - troubleTicket
      summary: Creates a TroubleTicket
      description: This operation creates a TroubleTicket entity.
      operationId: createTroubleTicket
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicket_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201TroubleTicket'
        default:
          $ref: '#/components/responses/Error'
  '/troubleTicket/{id}':
    get:
      tags:
        - troubleTicket
      summary: Retrieves a TroubleTicket by ID
      description: List or find TroubleTicket objects
      operationId: retrieveTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/200TroubleTicket_Get'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - troubleTicket
      summary: Deletes a TroubleTicket
      description: This operation deletes a TroubleTicket entity.
      operationId: deleteTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          $ref: '#/components/responses/204'
        default:
          $ref: '#/components/responses/Error'
    patch:
      tags:
        - troubleTicket
      summary: Updates partially a TroubleTicket
      description: This operation updates partially a TroubleTicket entity.
      operationId: patchTroubleTicket
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicket_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200TroubleTicket_Patch'
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketCreateEvent
      operationId: troubleTicketCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicketCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        TroubleTicketAttributeValueChangeEvent
      operationId: troubleTicketAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicketAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketStatusChangeEvent
      operationId: troubleTicketStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicketStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketDeleteEvent
      operationId: troubleTicketDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicketDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketInformationRequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        TroubleTicketInformationRequiredEvent
      operationId: troubleTicketInformationRequiredEvent
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicketInformationRequiredEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/troubleTicketResolvedEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity TroubleTicketCreateEvent
      description: Example of a client listener for receiving the notification TroubleTicketResolvedEvent
      operationId: troubleTicketResolvedEvent
      requestBody:
        $ref: '#/components/requestBodies/TroubleTicketResolvedEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - description: Base event with common attributes.
          type: object
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    Entity:
      allOf:
        - $ref: '#/components/schemas/Addressable'
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
    Addressable:
      type: object
      required:
        - id
        - href
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      required:
        - '@type'
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
    TroubleTicket:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A trouble ticket is a record of an issue that is created, tracked, and managed by a
            trouble ticket management system
          properties:
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a
                bill or charge
            channel:
              $ref: '#/components/schemas/ChannelRef'
            creationDate:
              type: string
              format: date-time
              description: The date on which the trouble ticket was created
            expectedResolutionDate:
              type: string
              format: date-time
              description: The expected resolution date determined by the trouble ticket system
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: List of additional identifiers coming from an external system
            lastUpdateDate:
              type: string
              format: date-time
              description: The date and time that the trouble ticked was last updated
            name:
              type: string
              description: >-
                Name of the trouble ticket, typically a short description provided by the user that
                create the ticket
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
              description: The note(s) that are associated to the ticket.
            priority:
              type: string
              description: >-
                The priority of the trouble ticket and how quickly the issue should be resolved.
                e.g. Critical, High, Medium, Low. The value is set by the ticket management system
                considering the severity, ticket type etc...
            relatedEntity:
              type: array
              items:
                $ref: '#/components/schemas/RelatedEntity'
              description: >-
                An entity that is related to the ticket such as a bill, a product, etc. The entity
                against which the ticket is associated.
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
              description: The related party(ies) that are associated to the ticket.
            requestedResolutionDate:
              type: string
              format: date-time
              description: The resolution date requested by the user
            resolutionDate:
              type: string
              format: date-time
              description: The date and time the trouble ticket was resolved
            status:
              $ref: '#/components/schemas/TroubleTicketStatusType'
            statusChange:
              type: array
              items:
                $ref: '#/components/schemas/StatusChange'
              description: The status change history that are associated to the ticket.Populated by the server
            statusChangeDate:
              type: string
              format: date-time
              description: The date and time the status changed.
            statusChangeReason:
              type: string
              description: The reason for changing the status
            troubleTicketRelationship:
              type: array
              items:
                $ref: '#/components/schemas/TroubleTicketRelationship'
              description: >-
                A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a
                relationship between trouble tickets
            description:
              type: string
              description: Description of the trouble or issue
            severity:
              type: string
              description: >-
                The severity of the issue. Indicate the implication of the issue on the expected
                functionality e.g. of a system, application, service etc.. 

                Severity values can be  Critical, Major, Minor
            ticketType:
              type: string
              description: 'represent a business type of the trouble ticket e.g. incident, complain, request'
          required:
            - description
            - status
            - severity
            - ticketType
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicket: '#/components/schemas/TroubleTicket'
    AttachmentRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRefOrValue: '#/components/schemas/AttachmentRefOrValue'
          AttachmentRef: '#/components/schemas/AttachmentRef'
          Attachment: '#/components/schemas/Attachment'
    ChannelRef:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/SchemaContext'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          type: object
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    Note:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - description: Extra information about a given entity
          type: object
          properties:
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            id:
              type: string
              description: Identifier of the note within its containing entity
            text:
              type: string
              description: Text of the note
          required:
            - id
            - text
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    RelatedEntity:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/EntityRef'
        - description: 'A reference to an entity, where the type of the entity is not known in advance.'
          type: object
          properties:
            role:
              type: string
              description: The role of an entity.
          required:
            - role
            - '@referredType'
    RelatedParty:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            Related Entity reference. A related party defines party or party role linked to a
            specific entity.
          type: object
          properties:
            role:
              type: string
              description: Role played by the related party
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - '@referredType'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty'
    TroubleTicketStatusType:
      type: string
      description: Possible values for the status of the trouble ticket
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - closed
        - resolved
    StatusChange:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - type: object
          description: >-
            Holds the status, reasons and associated date the status changed, populated by the
            server
          properties:
            changeReason:
              type: string
              description: The reason why the status changed.
            status:
              type: string
              description: The status of the entity
            changeDate:
              type: string
              format: date-time
              description: The date and time the status changed.
          required:
            - status
            - changeDate
      discriminator:
        propertyName: '@type'
        mapping:
          StatusChange: '#/components/schemas/StatusChange'
    TroubleTicketRelationship:
      allOf:
        - $ref: '#/components/schemas/SchemaContext'
        - type: object
          description: Represents a relationship between trouble Trouble Tickets
          properties:
            name:
              type: string
              description: Name of the Trouble Ticket
            href:
              type: string
              format: uri
              description: Hyperlink reference
            id:
              type: string
              description: ID of the related trouble ticket
            relationshipType:
              type: string
              description: 'Relationship type as dependent, isChild, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketRelationship: '#/components/schemas/TroubleTicketRelationship'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/AttachmentRefOrValue'
        - $ref: '#/components/schemas/Reference'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          type: object
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/SchemaContext'
        - description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: 'Attachment type such as video, picture'
            mimeType:
              type: string
              description: 'Attachment mime type such as extension file for video, picture and document'
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentValue: '#/components/schemas/AttachmentValue'
    SchemaContext:
      type: object
      description: SchemaContext schema for use in TMForum Open-APIs
      properties:
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    EntityRef:
      description: Entity reference schema to be use for all entityRef class.
      type: object
      properties:
        href:
          type: string
          description: Hyperlink reference
    GcTroubleTicketStatusType:
      type: string
      description: Possible values for the status of the trouble ticket
      enum:
        - acknowledged
        - rejected
        - inProgress
        - cancelled
        - closed
        - resolved
      properties: {}
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    TimePeriod:
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      type: object
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Reference:
      description: Reference schema .
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Identifier of the referred entity.
        name:
          type: string
          description: Name of the referred entity.
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    TroubleTicketAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - description: TroubleTicketAttributeValueChange structure
          required:
            - event
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketAttributeValueChangePayload'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketAttributeValueChangeEvent: '#/components/schemas/TroubleTicketAttributeValueChangeEvent'
    TroubleTicketAttributeValueChangePayload:
      description: TroubleTicketAttributeValueChangePayload generic structure
      required:
        - troubleTicket
      type: object
      properties:
        troubleTicket:
          $ref: '#/components/schemas/TroubleTicket'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - description: event with common attributes.
          type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/TmfEntityRef'
            reportingSystem:
              $ref: '#/components/schemas/TmfEntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
      discriminator:
        propertyName: '@type'
        mapping:
          Event: '#/components/schemas/Event'
          TroubleTicketStatusChangeEvent: '#/components/schemas/TroubleTicketStatusChangeEvent'
          TroubleTicketResolvedEvent: '#/components/schemas/TroubleTicketResolvedEvent'
          TroubleTicketInformationRequiredEvent: '#/components/schemas/TroubleTicketInformationRequiredEvent'
          TroubleTicketDeleteEvent: '#/components/schemas/TroubleTicketDeleteEvent'
          TroubleTicketCreateEvent: '#/components/schemas/TroubleTicketCreateEvent'
          TroubleTicketAttributeValueChangeEvent: '#/components/schemas/TroubleTicketAttributeValueChangeEvent'
    TmfEntityRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/SchemaContext'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          TmfEntityRef: '#/components/schemas/TmfEntityRef'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - description: Describes a given characteristic of an object or entity through a name/value pair.
          type: object
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            name:
              type: string
              description: Name of the characteristic
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    TroubleTicketCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - description: TroubleTicketCreateEvent generic structure
          required:
            - event
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketCreateEvent: '#/components/schemas/TroubleTicketCreateEvent'
    TroubleTicketCreateEventPayload:
      description: TroubleTicketCreateEventPayload
      required:
        - troubleTicket
      type: object
      properties:
        troubleTicket:
          $ref: '#/components/schemas/TroubleTicket'
    TroubleTicketDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - description: TroubleTicketDeleteEvent generic structure
          required:
            - event
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketDeleteEvent: '#/components/schemas/TroubleTicketDeleteEvent'
    TroubleTicketDeleteEventPayload:
      description: TroubleTicket Delete
      type: object
      properties:
        troubleTicket:
          $ref: '#/components/schemas/TroubleTicketDeleteEvent'
    TroubleTicketInformationRequiredEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - description: TroubleTicketInformationRequiredEvent generic structure
          required:
            - event
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketInformationRequiredEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketInformationRequiredEvent: '#/components/schemas/TroubleTicketInformationRequiredEvent'
    TroubleTicketInformationRequiredEventPayload:
      description: TroubleTicketInformationRequiredEventPayload generic structure
      required:
        - troubleTicketInformationRequired
      type: object
      properties:
        troubleTicketInformationRequired:
          $ref: '#/components/schemas/InformationRequiredEvent'
    InformationRequiredEvent:
      description: InformationRequiredEvent generic structure
      required:
        - id
        - href
        - informationRequiredPath
        - '@type'
      type: object
      properties:
        id:
          type: string
          description: unique identifier of the resource
        href:
          type: string
          description: hyperlink reference to the resource
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        informationRequiredPath:
          type: array
          items:
            $ref: '#/components/schemas/JsonPatch'
          minItems: 1
    JsonPatch:
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    TroubleTicketResolvedEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - description: TroubleTicketResolvedEvent generic structure
          required:
            - event
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketResolvedEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketResolvedEvent: '#/components/schemas/TroubleTicketResolvedEvent'
    TroubleTicketResolvedEventPayload:
      description: TroubleTicketResolvedEventPayload generic structure
      required:
        - troubleTicket
      type: object
      properties:
        troubleTicket:
          $ref: '#/components/schemas/TroubleTicket'
    TroubleTicketStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - description: TroubleTicketStatusChangeEvent generic structure
          required:
            - event
          type: object
          properties:
            event:
              $ref: '#/components/schemas/TroubleTicketStatusChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketStatusChangeEvent: '#/components/schemas/TroubleTicketStatusChangeEvent'
    TroubleTicketStatusChangeEventPayload:
      description: TroubleTicketStatusChangeEventPayload generic structure
      required:
        - troubleTicket
      type: object
      properties:
        troubleTicket:
          $ref: '#/components/schemas/TroubleTicket'
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    Entity_FVO:
      allOf:
        - $ref: '#/components/schemas/Addressable_FVO'
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity_FVO'
    TroubleTicket_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            A trouble ticket is a record of an issue that is created, tracked, and managed by a
            trouble ticket management system
          properties:
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a
                bill or charge
            channel:
              $ref: '#/components/schemas/ChannelRef'
            expectedResolutionDate:
              type: string
              format: date-time
              description: The expected resolution date determined by the trouble ticket system
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: List of additional identifiers coming from an external system
            name:
              type: string
              description: >-
                Name of the trouble ticket, typically a short description provided by the user that
                create the ticket
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
              description: The note(s) that are associated to the ticket.
            priority:
              type: string
              description: >-
                The priority of the trouble ticket and how quickly the issue should be resolved.
                e.g. Critical, High, Medium, Low. The value is set by the ticket management system
                considering the severity, ticket type etc...
            relatedEntity:
              type: array
              items:
                $ref: '#/components/schemas/RelatedEntity'
              description: >-
                An entity that is related to the ticket such as a bill, a product, etc. The entity
                against which the ticket is associated.
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
              description: The related party(ies) that are associated to the ticket.
            requestedResolutionDate:
              type: string
              format: date-time
              description: The resolution date requested by the user
            resolutionDate:
              type: string
              format: date-time
              description: The date and time the trouble ticket was resolved
            status:
              $ref: '#/components/schemas/TroubleTicketStatusType'
            troubleTicketRelationship:
              type: array
              items:
                $ref: '#/components/schemas/TroubleTicketRelationship'
              description: >-
                A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a
                relationship between trouble tickets
            description:
              type: string
              description: Description of the trouble or issue
            severity:
              type: string
              description: >-
                The severity of the issue. Indicate the implication of the issue on the expected
                functionality e.g. of a system, application, service etc.. 

                Severity values can be  Critical, Major, Minor
            ticketType:
              type: string
              description: 'represent a business type of the trouble ticket e.g. incident, complain, request'
          required:
            - description
            - status
            - severity
            - ticketType
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicket: '#/components/schemas/TroubleTicket_FVO'
    TroubleTicket_MVO:
      type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble
        ticket management system
      properties:
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
          description: >-
            File(s) attached to the trouble ticket. e.g. pictur of broken device, scaning of a bill
            or charge
        channel:
          $ref: '#/components/schemas/ChannelRef_MVO'
        creationDate:
          type: string
          format: date-time
          description: The date on which the trouble ticket was created
        expectedResolutionDate:
          type: string
          format: date-time
          description: The expected resolution date determined by the trouble ticket system
        externalIdentifier:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier_MVO'
          description: List of additional identifiers coming from an external system
        lastUpdateDate:
          type: string
          format: date-time
          description: The date and time that the trouble ticked was last updated
        name:
          type: string
          description: >-
            Name of the trouble ticket, typically a short description provided by the user that
            create the ticket
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note_MVO'
          description: The note(s) that are associated to the ticket.
        priority:
          type: string
          description: >-
            The priority of the trouble ticket and how quickly the issue should be resolved. e.g.
            Critical, High, Medium, Low. The value is set by the ticket management system
            considering the severity, ticket type etc...
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity_MVO'
          description: >-
            An entity that is related to the ticket such as a bill, a product, etc. The entity
            against which the ticket is associated.
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty_MVO'
          description: The related party(ies) that are associated to the ticket.
        requestedResolutionDate:
          type: string
          format: date-time
          description: The resolution date requested by the user
        resolutionDate:
          type: string
          format: date-time
          description: The date and time the trouble ticket was resolved
        status:
          $ref: '#/components/schemas/TroubleTicketStatusType'
        statusChange:
          type: array
          items:
            $ref: '#/components/schemas/StatusChange_MVO'
          description: The status change history that are associated to the ticket.Populated by the server
        statusChangeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        statusChangeReason:
          type: string
          description: The reason for changing the status
        troubleTicketRelationship:
          type: array
          items:
            $ref: '#/components/schemas/TroubleTicketRelationship_MVO'
          description: >-
            A list of trouble ticket relationships (TroubleTicketRelationship [*]). Represents a
            relationship between trouble tickets
        description:
          type: string
          description: Description of the trouble or issue
        severity:
          type: string
          description: >-
            The severity of the issue. Indicate the implication of the issue on the expected
            functionality e.g. of a system, application, service etc.. 

            Severity values can be  Critical, Major, Minor
        ticketType:
          type: string
          description: 'represent a business type of the trouble ticket e.g. incident, complain, request'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        An attachment by value or by reference. An attachment complements the description of an
        element, for example through a document, a video, a picture.
      properties: {}
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
          Attachment: '#/components/schemas/Attachment'
    ChannelRef_MVO:
      description: Reference to a Channel.
      type: object
      properties: {}
    ExternalIdentifier_MVO:
      description: >-
        An identification of an entity that is owned by or originates in a software system different
        from the current system, for example a ProductOrder handed off from a commerce platform into
        an order handling system. The structure identifies the system itself, the nature of the
        entity within the system (e.g. class name) and the unique ID of the entity within the
        system. It is anticipated that multiple external IDs can be held for a single entity, e.g.
        if the entity passed through multiple systems on the way to the current system. In this case
        the consumer is expected to sequence the IDs in the array in reverse order of provenance,
        i.e. most recent system first in the list.
      type: object
      properties:
        owner:
          type: string
          description: Name of the external system that owns the entity.
          example: MagentoCommerce
        externalIdentifierType:
          type: string
          description: >-
            Type of the identification, typically would be the type of the entity within the
            external system
          example: ProductOrder
        id:
          type: string
          description: identification of the entity within the external system.
    Note_MVO:
      description: Extra information about a given entity
      type: object
      properties:
        author:
          type: string
          description: Author of the note
          example: Mr. N. Bene
        date:
          type: string
          format: date-time
          description: Date of the note
          example: '2020-11-20T08:00:00Z'
        id:
          type: string
          description: Identifier of the note within its containing entity
        text:
          type: string
          description: Text of the note
    RelatedEntity_MVO:
      description: 'A reference to an entity, where the type of the entity is not known in advance.'
      type: object
      properties:
        role:
          type: string
          description: The role of an entity.
    RelatedParty_MVO:
      description: >-
        Related Entity reference. A related party defines party or party role linked to a specific
        entity.
      type: object
      properties:
        role:
          type: string
          description: Role played by the related party
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    StatusChange_MVO:
      type: object
      description: 'Holds the status, reasons and associated date the status changed, populated by the server'
      properties:
        changeReason:
          type: string
          description: The reason why the status changed.
        status:
          type: string
          description: The status of the entity
        changeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
    TroubleTicketRelationship_MVO:
      type: object
      description: Represents a relationship between trouble Trouble Tickets
      properties:
        name:
          type: string
          description: Name of the Trouble Ticket
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: ID of the related trouble ticket
        relationshipType:
          type: string
          description: 'Relationship type as dependent, isChild, etc...'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Service
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    TroubleTicket_FVO:
      description: The TroubleTicket to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicket_FVO'
      required: true
    TroubleTicket_MVO:
      description: The TroubleTicket to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicket_MVO'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/TroubleTicket_MVO'
          examples:
            updateTroubleTicket_using_merge-patch_json:
              $ref: '#/components/examples/updateTroubleTicket_using_merge-patch_json_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatch'
          examples:
            updateTroubleTicket_using_json-patch_json:
              $ref: '#/components/examples/updateTroubleTicket_using_json-patch_json_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatch'
      required: true
    TroubleTicketCreateEvent:
      description: TroubleTicket create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicketCreateEvent'
          examples:
            TroubleTicketCreateEvent:
              $ref: '#/components/examples/TroubleTicketCreateEvent_request'
      required: true
    TroubleTicketAttributeValueChangeEvent:
      description: TroubleTicket attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicketAttributeValueChangeEvent'
          examples:
            TroubleTicketAttributeValueChangeEvent:
              $ref: '#/components/examples/TroubleTicketAttributeValueChangeEvent_request'
      required: true
    TroubleTicketStatusChangeEvent:
      description: TroubleTicket statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicketStatusChangeEvent'
          examples:
            TroubleTicketStatusChangeEvent:
              $ref: '#/components/examples/TroubleTicketStatusChangeEvent_request'
      required: true
    TroubleTicketDeleteEvent:
      description: TroubleTicket delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicketDeleteEvent'
          examples:
            TroubleTicketDeleteEvent:
              $ref: '#/components/examples/TroubleTicketDeleteEvent_request'
      required: true
    TroubleTicketInformationRequiredEvent:
      description: TroubleTicket informationRequired Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicketInformationRequiredEvent'
          examples:
            TroubleTicketInformationRequiredEvent:
              $ref: '#/components/examples/TroubleTicketInformationRequiredEvent_request'
      required: true
    TroubleTicketResolvedEvent:
      description: TroubleTicket resolved Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicketResolvedEvent'
          examples:
            TroubleTicketResolvedEvent:
              $ref: '#/components/examples/TroubleTicketResolvedEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '204':
      description: Deleted
    200TroubleTicketArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TroubleTicket'
          examples:
            RetrieveTroubleTicketByListwithFieldsSelection:
              $ref: '#/components/examples/RetrieveTroubleTicketByListwithFieldsSelection_response'
    200TroubleTicket_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
          examples:
            retrieveById:
              $ref: '#/components/examples/retrieveById_response'
    200TroubleTicket_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
          examples:
            updateTroubleTicket_using_merge-patch_json:
              $ref: '#/components/examples/updateTroubleTicket_using_merge-patch_json_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/TroubleTicket'
              - type: array
                items:
                  $ref: '#/components/schemas/TroubleTicket'
              - type: string
                nullable: true
          examples:
            updateTroubleTicket_using_json-patch_json:
              $ref: '#/components/examples/updateTroubleTicket_using_json-patch_json_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/TroubleTicket'
              - type: array
                items:
                  $ref: '#/components/schemas/TroubleTicket'
              - type: string
                nullable: true
    200TroubleTicket_Put:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
    201TroubleTicket:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TroubleTicket'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    retrieveById_response:
      value:
        id: '3180'
        href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
        creationDate: '2021-05-31T07:34:45.968Z'
        description: >-
          I do not accept the last VOD charge, since the movie was constantly interrupted, I had to
          quit watching the movie in the middle 
        expectedResolutionDate: '2019-06-10T07:34:45.968Z'
        externalId: 213-9909
        lastUpdate: '2021-05-31T07:34:45.968Z'
        name: Compliant over last bill
        priority: High
        requestedResolutionDate: '2021-05-31T07:34:45.968Z'
        severity: Urgent
        status: Pending
        statusChangeDate: '2021-05-31T07:34:45.968Z'
        statusChangeReason: Need more information from the customer
        ticketType: Bill Dispute
        attachment:
          - description: Scanned disputed bill
            mimeType: image/png
            name: March Bill
            url: 'https://mycsp.com:7070/docloader?docnum=3534555'
        channel:
          id: '8774'
          name: self service
          '@type': Channel
        note:
          - id: '77456'
            author: Jack Smith
            date: '2021-05-31T07:34:45.968Z'
            text: 'This is quite important, please approach me as soon as possible'
            '@type': Note
        relatedEntity:
          - id: '3472'
            href: 'https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297'
            name: March 2019 Bill
            role: disputedBill
            '@type': RelatedEntity
            '@referredType': CustomerBill
        relatedParty:
          - id: '9866'
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866'
            name: Sandy Smith
            role: member
            '@referredType': Individual
          - id: '9176'
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176'
            name: Jack Smith
            role: customer
            '@referredType': Customer
        statusChange:
          - changeDate: '2021-05-31T07:34:45.968Z'
            changeReason: Need more information from the customer
            status: Pending
            '@type': StatusCange
        troubleTicketRelationship:
          - id: '567433'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433'
            name: Network Coverage
            relationshipType: dependecy
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml'
        '@type': TroubleTicket
      description: >-
        Retrieve a troubleTicket from its identifier - only a subset of troubleTicket attributes (as
        defined in the API) are used in this example.
    RetrieveTroubleTicketByListwithFieldsSelection_response:
      value:
        - id: '3180'
          href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
          name: Compliant over last bill
          priority: High
          '@type': TroubleTicket
        - id: '3256'
          href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3256'
          name: 'Coversage problem '
          priority: High
          '@type': TechnicalTroubleTicket
        - id: '4563'
          href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/4563'
          name: Network latency
          priority: High
          '@type': NetworkTroubleTicket
      description: >-
        Retrieve a list of troubleTicket(s) with attribute selection (name,@type), and filtering
        (priority is 'High') - only few attributes are retrieved for each
        troubleTicket.(?fields=name,@type&filter=priority=='High'
    updateTroubleTicket_using_json-patch_json_request:
      value:
        - op: replace
          path: /priority
          value: High
        - op: add
          path: /note
          value:
            id: '77456'
            author: Jack Smith
            text: 'This is quite important, please approach me as soon as possible'
      description: PATCH TroubleTicket request leveraging json-patch+json application example
    updateTroubleTicket_using_json-patch_json_response:
      value:
        id: '3180'
        href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
        creationDate: '2021-05-31T07:34:45.968Z'
        description: >-
          I do not accept the last VOD charge, since the movie was constantly interrupted, I had to
          quit watching the movie in the middle 
        expectedResolutionDate: '2021-06-10T07:34:45.968Z'
        externalId: 213-9909
        lastUpdate: '2021-05-31T07:34:45.968Z'
        name: Compliant over last bill
        priority: High
        requestedResolutionDate: '2021-05-31T07:34:45.968Z'
        severity: Urgent
        status: Pending
        statusChangeDate: '2021-05-31T07:34:45.968Z'
        statusChangeReason: Need more information from the customer
        ticketType: Bill Dispute
        attachment:
          - description: Scanned disputed bill
            mimeType: image/png
            name: March Bill
            url: 'https://mycsp.com:7070/docloader?docnum=3534555'
        channel:
          id: '8774'
          name: self service
          '@type': Channel
        note:
          - id: '77456'
            author: Jack Smith
            date: '2021-05-31T07:34:45.968Z'
            text: 'This is quite important, please approach me as soon as possible'
            '@type': Note
        relatedEntity:
          - id: '3472'
            href: 'https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297'
            name: March 2021 Bill
            role: disputedBill
            '@type': RelatedEntity
            '@referredType': CustomerBill
        relatedParty:
          - id: '9866'
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866'
            name: Sandy Smith
            role: member
            '@referredType': Individual
          - id: '9176'
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176'
            name: Jack Smith
            role: customer
            '@referredType': Customer
        statusChange:
          - changeDate: '2019-05-31T07:34:45.968Z'
            changeReason: Need more information from the customer
            status: Pending
            '@type': StatusCange
        troubleTicketRelationship:
          - TroubleTicket:
              id: '567433'
              href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433'
              name: Network Coverage
              relationshipType: dependecy
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml'
        '@type': TroubleTicket
      description: TroubleTicket representation.
    updateTroubleTicket_using_merge-patch_json_request:
      value:
        status: resolved
        statusChangeReason: Give credit and resent bill to customer
      description: PATCH TroubleTicket request leveraging merge-patch+json application example
    updateTroubleTicket_using_merge-patch_json_response:
      value:
        id: '3180'
        href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
        creationDate: '2021-05-31T07:34:45.968Z'
        description: >-
          I do not accept the last VOD charge, since the movie was constantly interrupted, I had to
          quit watching the movie in the middle 
        expectedResolutionDate: '2021-06-10T07:34:45.968Z'
        externalId: 213-9909
        lastUpdate: '2021-06-01T07:34:45.968Z'
        name: Compliant over last bill
        priority: High
        requestedResolutionDate: '2021-05-31T07:34:45.968Z'
        resolutionDate: '2021-06-01T07:34:45.968Z'
        severity: Urgent
        status: Resolved
        statusChangeDate: '2021-06-01T07:34:45.968Z'
        statusChangeReason: Give credit and resent bill to customer
        ticketType: Bill Dispute
        attachment:
          - description: Scanned disputed bill
            mimeType: image/png
            name: March Bill
            url: 'https://mycsp.com:7070/docloader?docnum=3534555'
        channel:
          id: '8774'
          name: self service
          '@type': Channel
        note:
          - id: '77456'
            author: Jack Smith
            date: '2019-05-31T07:34:45.968Z'
            text: 'This is quite important, please approach me as soon as possible'
            '@type': Note
        relatedEntity:
          - id: '3472'
            href: 'https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297'
            name: March 2019 Bill
            role: disputedBill
            '@type': RelatedEntity
            '@referredType': CustomerBill
        relatedParty:
          - id: '9866'
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866'
            name: Sandy Smith
            role: member
            '@referredType': Individual
          - id: '9176'
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176'
            name: Jack Smith
            role: customer
            '@referredType': Customer
        statusChange:
          - changeDate: '2021-05-31T07:34:45.968Z'
            changeReason: Need more information from the customer
            status: Pending
            '@type': StatusCange
          - changeDate: '2021-06-01T07:34:45.968Z'
            changeReason: Give credit and resent bill to customer
            status: Resolved
            '@type': StatusCange
        troubleTicketRelationship:
          - id: '567433'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433'
            name: Network Coverage
            relationshipType: dependecy
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml'
        '@type': TroubleTicket
      description: TroubleTicket representation.
    TroubleTicketCreateEvent_request:
      value:
        correlationId: 126-54f
        description: TroubleTicketCreateEvent illustration
        domain: Commercial
        eventId: '125'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: TroubleTicketCreateEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: TroubleTicketCreateEvent
        event:
          troubleTicket:
            id: '3180'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
            creationDate: '2021-05-31T07:34:45.968Z'
            description: >-
              I do not accept the last VOD charge, since the movie was constantly interrupted, I had
              to quit watching the movie in the middle 
            expectedResolutionDate: '2019-06-10T07:34:45.968Z'
            externalId: 213-9909
            lastUpdate: '2021-05-31T07:34:45.968Z'
            name: Compliant over last bill
            priority: High
            requestedResolutionDate: '2021-05-31T07:34:45.968Z'
            severity: Urgent
            status: Pending
            statusChangeDate: '2021-05-31T07:34:45.968Z'
            statusChangeReason: Need more information from the customer
            ticketType: Bill Dispute
            attachment:
              - description: Scanned disputed bill
                mimeType: image/png
                name: March Bill
                url: 'https://mycsp.com:7070/docloader?docnum=3534555'
            channel:
              id: '8774'
              name: self service
              '@type': Channel
            note:
              - id: '77456'
                author: Jack Smith
                date: '2021-05-31T07:34:45.968Z'
                text: 'This is quite important, please approach me as soon as possible'
                '@type': Note
            relatedEntity:
              - id: '3472'
                href: 'https://mycsp.com:8080/tmf-api/customerBillManagement/v5/customerBill/8297'
                name: March 2019 Bill
                role: disputedBill
                '@type': RelatedEntity
                '@referredType': CustomerBill
            relatedParty:
              - id: '9866'
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/9866'
                name: Sandy Smith
                role: member
                '@referredType': Individual
              - id: '9176'
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/customer/9176'
                name: Jack Smith
                role: customer
                '@referredType': Customer
            statusChange:
              - changeDate: '2021-05-31T07:34:45.968Z'
                changeReason: Need more information from the customer
                status: Pending
                '@type': StatusCange
            troubleTicketRelationship:
              - id: '567433'
                href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/567433'
                name: Network Coverage
                relationshipType: dependecy
            '@schemaLocation': 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/schema/troubleTicket.yml'
            '@type': TroubleTicket
          reportingSystem:
            id: '123'
            name: CRM app
            '@type': ReportingSystem
            '@referredType': LREportingSystem
          source:
            id: '123'
            name: CRM app
            '@type': Source
            '@referredType': Source
          '@baseType': Event
          '@type': TroubleTicketCreateEvent
      description: Message example for TroubleTicketCreateEvent event
    TroubleTicketAttributeValueChangeEvent_request:
      value:
        correlationId: akj-566
        description: TroubleTicketttributeValueChangeEvent illustration
        domain: Commercial
        eventId: '741'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: TroubleTicketAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: TroubleTicketAttributeValueChangeEvent
        event:
          troubleTicket:
            id: '3180'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
            priority: High
            note:
              - id: '77456'
                author: Jack Smith
                date: '2021-05-31T07:34:45.968Z'
                text: 'This is quite important, please approach me as soon as possible'
                '@type': Note
          reportingSystem:
            id: '123'
            name: CRM app
            '@type': ReportingSysteme
            '@referredType': ReportingSystem
          source:
            id: '123'
            name: CRM app
            '@type': Source
            '@referredType': Source
          '@baseType': Event
          '@type': TroubleTicketAttributeValueChangeEvent
      description: Message example for TroubleTicketAttributeValueChangeEvent event
    TroubleTicketStatusChangeEvent_request:
      value:
        correlationId: 333-fd6
        description: TroubleTicketStatusChangeEvent illustration
        domain: Commercial
        eventId: '569'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: TroubleTicketStatusChangeEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: TroubleTicketStatusChangeEvent
        event:
          troubleTicket:
            id: '3180'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
            '@type': TroubleTicket
            status: resolved
            statusChangeReason: Give credit and resent bill to customer
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': TroubleTicketStatusChangeEvent
      description: Message example for TroubleTicketStatusChangeEvent_request event
    TroubleTicketDeleteEvent_request:
      value:
        correlationId: 145d-8hh
        description: TroubleTicketDeleteEvent illustration
        domain: Commercial
        eventId: '523'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: TroubleTicketDeleteEvent
        priority: '3'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: TroubleTicketDeleteEvent
        event:
          troubleTicket:
            id: '3180'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingSystem
          '@referredType': eportingSystem
        source:
          id: '123'
          name: CRM app
          '@type': Rsource
          '@referredType': Source
        '@baseType': Event
        '@type': TroubleTicketDeleteEvent
      description: Message example for TroubleTicketDeleteEvent event
    TroubleTicketInformationRequiredEvent_request:
      value:
        correlationId: qs1-k33
        description: TroubleTicketInformationRequiredEvent illustration
        domain: Commercial
        eventId: '966'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: TroubleTicketInformationRequiredEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: TroubleTicketInformationRequiredEvent
        event:
          troubleTicket:
            id: '3180'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
            '@type': TroubleTicket
            informationRequiredPath:
              - op: replace
                path: requestedResolutionDate
              - op: add
                path: relatedEntity
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingSystem
          '@referredType': ReportingSystem
        source:
          id: '123'
          name: CRM app
          '@type': Source
          '@referredType': Source
        '@baseType': Event
        '@type': TroubleTicketInformationRequiredEvent
      description: Message example for TroubleTicketInformationRequiredEvent event
    TroubleTicketResolvedEvent_request:
      value:
        correlationId: 333-fd6
        description: TroubleTicketResolvedEvent illustration
        domain: Commercial
        eventId: '569'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: TroubleTicketResolvedEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: TroubleTicketResolvedEvent
        event:
          troubleTicket:
            id: '3180'
            href: 'https://mycsp.com:8080/tmf-api/troubleTicket/v5/troubleTicket/3180'
            '@type': TroubleTicket
            status: resolved
            statusChangeReason: Give credit and resent bill to customer
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': TroubleTicketResolvedEvent
      description: Message example for TroubleTicketResolvedEvent event
